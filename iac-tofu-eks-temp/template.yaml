apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: opentofu-eks-autopilot
  title: OpenTofu EKS Cluster com Pipeline Autopilot
  description: |
    Template para cria√ß√£o de clusters EKS usando OpenTofu com pipeline autopilot.
    Inclui configura√ß√£o completa de infraestrutura, addons e GitOps com ArgoCD.
    Suporta m√∫ltiplos ambientes (dev, stage, prod) com tfvars espec√≠ficos.
  tags:
    - opentofu
    - terraform
    - eks
    - kubernetes
    - aws
    - gitops
    - argocd
    - infrastructure
    - autopilot
  links:
    - url: https://opentofu.org/docs/
      title: OpenTofu Documentation
      icon: docs
    - url: https://aws.amazon.com/eks/
      title: Amazon EKS
      icon: cloud

spec:
  owner: platform-team
  type: infrastructure
  
  parameters:
    # ===== CONFIGURA√á√ïES PRINCIPAIS =====
    - title: üèóÔ∏è Configura√ß√µes Principais
      required:
        - projectName
        - repoUrl
        - awsRegion
        - environments
      properties:
        projectName:
          title: Nome do Projeto
          type: string
          description: Nome do projeto (usado para prefixos de recursos)
          pattern: '^[a-z][a-z0-9-]*[a-z0-9]$'
          maxLength: 20
          ui:autofocus: true
          ui:help: 'Apenas letras min√∫sculas, n√∫meros e h√≠fens. Deve come√ßar com letra.'

        repoUrl:
          title: Reposit√≥rio de Destino
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
          description: Reposit√≥rio onde o c√≥digo ser√° criado

        awsRegion:
          title: Regi√£o AWS
          type: string
          description: Regi√£o AWS para deploy da infraestrutura
          default: us-east-1
          enum:
            - us-east-1
            - us-west-2
            - eu-west-1
            - eu-central-1
            - ap-southeast-1
          enumNames:
            - 'US East (N. Virginia)'
            - 'US West (Oregon)'
            - 'Europe (Ireland)'
            - 'Europe (Frankfurt)'
            - 'Asia Pacific (Singapore)'

        environments:
          title: Ambientes a Configurar
          type: array
          description: Selecione os ambientes que ser√£o configurados
          uniqueItems: true
          ui:widget: checkboxes
          items:
            type: string
            enum:
              - dev
              - stage
              - prod
          default:
            - dev

    # ===== CONFIGURA√á√ïES DO CLUSTER EKS =====
    - title: ‚öôÔ∏è Configura√ß√µes do Cluster EKS
      properties:
        clusterVersion:
          title: Vers√£o do Kubernetes
          type: string
          description: Vers√£o do Kubernetes para o cluster EKS
          default: "1.28"
          enum:
            - "1.26"
            - "1.27"
            - "1.28"
            - "1.29"

    # ===== ADDONS E COMPONENTES =====
    - title: üîß Addons e Componentes
      properties:
        enabledAddons:
          title: Addons Habilitados
          type: array
          description: Selecione os addons que ser√£o instalados no cluster
          uniqueItems: true
          ui:widget: checkboxes
          items:
            type: string
            enum:
              - aws-ebs-csi-driver
              - coredns
              - kube-proxy
              - eks-pod-identity-agent
              - adot
              - argocd
          enumNames:
            - AWS EBS CSI Driver
            - CoreDNS
            - Kube Proxy
            - EKS Pod Identity Agent
            - AWS Distro for OpenTelemetry
            - ArgoCD
          default:
            - aws-ebs-csi-driver
            - coredns
            - kube-proxy

    # ===== CONFIGURA√á√ïES DE GOVERNAN√áA =====
    - title: üìã Configura√ß√µes de Governan√ßa
      properties:
        priority:
          title: Prioridade da Solicita√ß√£o
          type: string
          description: Prioridade para aprova√ß√£o e processamento
          default: medium
          enum:
            - low
            - medium
            - high
            - critical
          enumNames:
            - 'Baixa - Desenvolvimento/Teste'
            - 'M√©dia - Staging/QA'
            - 'Alta - Produ√ß√£o'
            - 'Cr√≠tica - Emerg√™ncia'

        reviewers:
          title: Revisores Adicionais
          type: array
          description: Usu√°rios GitHub para revisar o PR (al√©m dos padr√£o)
          items:
            type: string
          ui:help: 'Usernames do GitHub, um por linha'

        createDraft:
          title: Criar como Draft
          type: boolean
          description: Criar PR como draft para revis√£o antes da aprova√ß√£o
          default: false

  steps:
    # ===== VALIDA√á√ÉO INICIAL =====
    - id: validate-inputs
      name: üîç Validar Entradas
      action: debug:log
      input:
        message: |
          Validando configura√ß√µes:
          - Projeto: ${{ parameters.projectName }}
          - Regi√£o: ${{ parameters.awsRegion }}
          - Ambientes: ${{ parameters.environments | join(', ') }}
          - Cluster Version: ${{ parameters.clusterVersion }}

    # ===== FETCH ARQUIVOS EST√ÅTICOS =====
    - id: fetch-static
      name: üì• Buscar Arquivos Base
      action: fetch:plain
      input:
        url: ./skeleton
        targetPath: .

    # ===== PROCESSAR CATALOG-INFO =====
    - id: process-catalog-info
      name: üìã Processar Catalog Info
      action: fetch:template
      input:
        url: ./skeleton/catalog-info.yaml.template
        targetPath: ./catalog-info.yaml
        values:
          projectName: ${{ parameters.projectName }}
          owner: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          repoName: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          awsRegion: ${{ parameters.awsRegion }}
          environments: ${{ parameters.environments }}

    # ===== PROCESSAR TEMPLATES DIN√ÇMICOS =====
    - id: process-tfvars
      name: üõ†Ô∏è Processar Arquivos TFVars
      action: fetch:template
      input:
        url: ./skeleton/terraform/environments
        targetPath: ./terraform/environments
        values:
          projectName: ${{ parameters.projectName }}
          awsRegion: ${{ parameters.awsRegion }}
          clusterVersion: ${{ parameters.clusterVersion }}
          owner: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          repoName: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          environments: ${{ parameters.environments }}

    # ===== PROCESSAR BLUEPRINT ADDONS =====
    - id: process-addons
      name: üîß Processar Blueprint Addons
      action: fetch:template
      input:
        url: ./skeleton/terraform/blueprint_addons.tf.template
        targetPath: ./terraform
        values:
          enabledAddons: ${{ parameters.enabledAddons }}

    # ===== PROCESSAR PIPELINE =====
    - id: process-pipeline
      name: ‚öôÔ∏è Processar Pipeline
      action: fetch:template
      input:
        url: ./skeleton/.github
        targetPath: ./.github
        values:
          projectName: ${{ parameters.projectName }}
          environments: ${{ parameters.environments }}
          awsRegion: ${{ parameters.awsRegion }}

    # ===== REMOVER TEMPLATES PROCESSADOS =====
    - id: cleanup-templates
      name: üßπ Limpar Templates
      action: fs:delete
      input:
        files:
          - ./catalog-info.yaml.template
          - ./terraform/blueprint_addons.tf.template
          - ./terraform/environments/dev.tfvars.template
          - ./terraform/environments/stage.tfvars.template
          - ./terraform/environments/prod.tfvars.template
          - ./.github/workflows/pipe-tofu.yaml.template

    # ===== REMOVER AMBIENTE DEV (SE N√ÉO SELECIONADO) =====
    - id: cleanup-dev-env
      name: üóëÔ∏è Remover Ambiente Dev (se n√£o selecionado)
      if: ${{ 'dev' not in parameters.environments }}
      action: fs:delete
      input:
        files:
          - ./terraform/environments/dev.tfvars

    # ===== REMOVER AMBIENTE STAGE (SE N√ÉO SELECIONADO) =====
    - id: cleanup-stage-env
      name: üóëÔ∏è Remover Ambiente Stage (se n√£o selecionado)
      if: ${{ 'stage' not in parameters.environments }}
      action: fs:delete
      input:
        files:
          - ./terraform/environments/stage.tfvars

    # ===== REMOVER AMBIENTE PROD (SE N√ÉO SELECIONADO) =====
    - id: cleanup-prod-env
      name: üóëÔ∏è Remover Ambiente Prod (se n√£o selecionado)
      if: ${{ 'prod' not in parameters.environments }}
      action: fs:delete
      input:
        files:
          - ./terraform/environments/prod.tfvars

    # ===== CRIAR REPOSIT√ìRIO =====
    - id: publish-repo
      name: üì¶ Criar Reposit√≥rio
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: 'Infraestrutura EKS para ${{ parameters.projectName }} usando OpenTofu'
        homepage: https://github.com/${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
        topics:
          - opentofu
          - terraform
          - eks
          - kubernetes
          - aws
          - infrastructure
          - ${{ parameters.projectName }}
        access: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
        defaultBranch: main
        gitCommitMessage: |
          üöÄ Initial commit: OpenTofu EKS Infrastructure for ${{ parameters.projectName }}
          
          - Configura√ß√£o completa de cluster EKS
          - Pipeline autopilot com GitHub Actions
          - Suporte a m√∫ltiplos ambientes: ${{ parameters.environments | join(', ') }}
          - Regi√£o: ${{ parameters.awsRegion }}
          - Kubernetes: v${{ parameters.clusterVersion }}
          
          Criado via Backstage Scaffolder

    # ===== REGISTRAR NO CAT√ÅLOGO =====
    - id: register-catalog
      name: üìã Registrar no Cat√°logo
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-repo'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: üì¶ Ver Reposit√≥rio
        url: ${{ steps['publish-repo'].output.remoteUrl }}
        icon: github

      - title: üìä Pipeline Status
        url: ${{ steps['publish-repo'].output.remoteUrl }}/actions
        icon: github

      - title: üìã Ver no Cat√°logo
        url: ${{ steps['register-catalog'].output.catalogInfoUrl }}
        icon: catalog

      - title: üìñ OpenTofu Documentation
        url: https://opentofu.org/docs/
        icon: docs

      - title: ‚òÅÔ∏è AWS EKS Console
        url: https://console.aws.amazon.com/eks/home?region=${{ parameters.awsRegion }}#/clusters
        icon: cloud

    text:
      - title: üéâ Infraestrutura OpenTofu Criada com Sucesso!
        content: |
          ## ‚úÖ Pr√≥ximos Passos:
          
          ### 1. üì¶ Reposit√≥rio Criado
          - Acesse o reposit√≥rio criado no GitHub
          - Verifique se todos os arquivos est√£o corretos
          
          ### 2. üöÄ Executar Pipeline
          - V√° para a aba Actions do reposit√≥rio
          - Execute a pipeline manualmente para o ambiente desejado
          - Monitore o progresso da cria√ß√£o da infraestrutura
          
          ### 3. üîß Configura√ß√µes P√≥s-Deploy
          - Configure kubectl: `aws eks update-kubeconfig --region ${{ parameters.awsRegion }} --name ${{ parameters.projectName }}-eks`
          - Valide conectividade com o cluster
          - Configure aplica√ß√µes no ArgoCD (se habilitado)
          
          ### üìä Resumo da Configura√ß√£o:
          - **Projeto:** ${{ parameters.projectName }}
          - **Ambientes:** ${{ parameters.environments | join(', ') }}
          - **Regi√£o:** ${{ parameters.awsRegion }}
          - **Kubernetes:** v${{ parameters.clusterVersion }}
          - **Addons:** ${{ parameters.enabledAddons | length }} habilitados
          
          ### üÜò Suporte:
          Em caso de d√∫vidas ou problemas, consulte a documenta√ß√£o ou entre em contato com a equipe de platform.