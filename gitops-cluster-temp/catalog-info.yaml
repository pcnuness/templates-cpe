apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: criar-cluster-gitops-avancado
  title: Criar RepositÃ³rio GitOps de Cluster com Addons
  description: Gera uma estrutura de repositÃ³rio GitOps para gerenciamento de clusters Kubernetes, com seleÃ§Ã£o de addons essenciais.
  tags:
    - kubernetes
    - gitops
    - cluster-management
    - argocd
spec:
  owner: plataforma-gitops
  type: service
  parameters:
    - title: ConfiguraÃ§Ãµes BÃ¡sicas
      required:
        - projectName
        - owner
      properties:
        projectName:
          title: Nome do RepositÃ³rio
          type: string
          description: Nome do repositÃ³rio a ser criado
          default: meu-cluster-gitops
          pattern: '^[a-zA-Z0-9-_]+$'
        owner:
          title: OrganizaÃ§Ã£o ou UsuÃ¡rio GitHub
          type: string
          description: OrganizaÃ§Ã£o ou usuÃ¡rio GitHub que serÃ¡ proprietÃ¡rio do repositÃ³rio
          default: sua-org
          pattern: '^[a-zA-Z0-9-_]+$'
        targetRevision:
          title: Nome do Branch GitOps
          type: string
          description: Nome da branch utilizada no monitoramento gitops
          default: main
          pattern: '^[a-z]+$'
    - title: SeleÃ§Ã£o de Addons
      properties:
        enableAwsAlbController:
          title: AWS Load Balancer Controller
          type: boolean
          description: Habilitar AWS Application Load Balancer Controller
          default: true
        enableIngressNginx:
          title: Ingress NGINX
          type: boolean
          description: Habilitar Ingress NGINX Controller
          default: false
        enableArgoCdIngress:
          title: ArgoCD Ingress
          type: boolean
          description: Habilitar configuraÃ§Ã£o de Ingress para ArgoCD
          default: false
        enableCrossplane:
          title: Crossplane
          type: boolean
          description: Habilitar Crossplane para gerenciamento de infraestrutura
          default: false
        enableKarpenter:
          title: Karpenter
          type: boolean
          description: Habilitar Karpenter para autoscaling de Nodes
          default: false
        enableKubePrometheusStack:
          title: Kube Prometheus Stack
          type: boolean
          description: Habilitar Kube Prometheus Stack para Obervibilidade
          default: false
        enableMetricsServer:
          title: Metrics Server
          type: boolean
          description: Habilitar Metrics Server para monitoramento do Kubernetes
          default: false
  steps:
    - id: fetch-base-structure
      name: Buscar Estrutura Base
      action: fetch:template
      input:
        url: ./templates/cluster-management-base-structure/
        targetPath: ./
        values:
          projectName: ${{ parameters.projectName }}
          owner: ${{ parameters.owner }}

    - id: fetch-aws-alb-controller
      name: Adicionar AWS Load Balancer Controller
      if: ${{ parameters.enableAwsAlbController }}
      action: fetch:template
      input:
        url: ./templates/addons/aws/aws-load-balancer-controller/
        targetPath: bootstraps/control-plane/addons/aws/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-ingress-nginx
      name: Adicionar Ingress NGINX
      if: ${{ parameters.enableIngressNginx }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/ingress-nginx/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-argocd-ingress
      name: Adicionar ArgoCD Ingress
      if: ${{ parameters.enableArgoCdIngress }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/argocd-ingress/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-crossplane
      name: Adicionar Crossplane
      if: ${{ parameters.enableCrossplane }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/crossplane/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-karpenter
      name: Adicionar Karpenter
      if: ${{ parameters.enableKarpenter }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/karpenter/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-kube-prometheus-stack
      name: Adicionar Kube Prometheus Stack
      if: ${{ parameters.enableKubePrometheusStack }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/karpenter/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}

    - id: fetch-metrics-server
      name: Adicionar Metrics Server
      if: ${{ parameters.enableMetricsServer }}
      action: fetch:template
      input:
        url: ./templates/addons/oss/karpenter/
        targetPath: bootstraps/control-plane/addons/oss/
        values:
          projectName: ${{ parameters.projectName }}


    - id: publish-repository
      name: Publicar RepositÃ³rio no GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: RepositÃ³rio GitOps para gerenciamento de cluster Kubernetes gerado pelo Backstage
        repoUrl: github.com?owner=${{ parameters.owner }}&repo=${{ parameters.projectName }}
        defaultBranch: main
        gitCommitMessage: Initial commit from Backstage Scaffolder
        gitAuthorName: Backstage Scaffolder
        gitAuthorEmail: scaffolder@backstage.io
        repoVisibility: public

  output:
    links:
      - title: RepositÃ³rio no GitHub
        url: ${{ steps['publish-repository'].output.remoteUrl }}
      - title: Abrir no GitHub
        url: ${{ steps['publish-repository'].output.remoteUrl }}
        icon: github
    text:
      - title: PrÃ³ximos Passos
        content: |
          ## RepositÃ³rio GitOps Criado com Sucesso! ðŸŽ‰

          Seu repositÃ³rio **${{ parameters.projectName }}** foi criado com a estrutura GitOps completa.

          ### Addons Habilitados:
          {% if parameters.enableAwsAlbController %}
          - âœ… AWS Load Balancer Controller
          {% endif %}
          {% if parameters.enableIngressNginx %}
          - âœ… Ingress NGINX
          {% endif %}
          {% if parameters.enableArgoCdIngress %}
          - âœ… ArgoCD Ingress
          {% endif %}
          {% if parameters.enableCrossplane %}
          - âœ… Crossplane
          {% endif %}
          {% if parameters.enableKarpenter %}
          - âœ… Karpenter
          {% endif %}
          {% if parameters.enableKubePrometheusStack %}
          - âœ… Kube Prometheus Stack
          {% endif %}
          {% if parameters.enableMetricsServer %}
          - âœ… Metrics Server
          {% endif %}

          ### PrÃ³ximos Passos:
          1. Clone o repositÃ³rio localmente
          2. Configure as variÃ¡veis especÃ­ficas do seu ambiente nos arquivos YAML
          3. Aplique o bootstrap inicial no seu cluster
          4. Configure o ArgoCD para monitorar o repositÃ³rio

          ### Estrutura Criada:
          ```
          â”œâ”€â”€ README.md
          â”œâ”€â”€ bootstraps/
          â”‚   â”œâ”€â”€ cluster-init/
          â”‚   â”œâ”€â”€ control-plane/
          â”‚   â””â”€â”€ gitops-root.yaml
          ```